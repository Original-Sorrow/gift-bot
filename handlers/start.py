from misc import *
import handlers.keyboard as kb
from aiogram import types
from aiogram.utils.markdown import quote_html
import random
from config import *
import re
from .functions import *

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    referal=message.get_args()
    user = message.from_user
    data = await get_rang(message)
    refka = bot_link + str(user.id)
    bal=await get_balance(message)
    allb=await viplata()
    await bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç!",reply_markup=kb.no_inl)
    if data is None:
        cursor.execute(f"INSERT INTO users VALUES (?, ?, ?, ?, ?, ?)",(user.id, 0, 0, 0, 0, 0))
        conn.commit()
        if referal is not None:
            await cheksudb(message, referal)
        else:
            await cheksudb(message)
    elif data[4] == 0:
        if referal is not None:
            await cheksudb(message, referal)
        else:
            await cheksudb(message)
    elif data[4] == 1:
        await bot.send_message(message.chat.id, f"–î–∞—Ä–∏—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ\n"
                                                f"–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –¥—Ä—É–∑—å—è–º –ø–æ–¥–∞—Ä–∫–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –≤–∞–ª—é—Ç—É."
                                                f"\n–í—ã–≤–æ–¥ –Ω–∞ Qiwi —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–∏ {all_balance} anicoin –Ω–∞ —Å—É–º–º–∞—Ä–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
                                                f"\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {refka}"
                                                f"\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: <b>{bal}</b> anicoin üíé\n"
                                                f"–¶–µ–Ω–∞ 1 anicoin —Ä–∞–≤–Ω–∞ <b>{coast}‚ÇΩ</b>\n"
                                                f"–û–±—â–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞–≤–µ–Ω: {allb} {name_wallet}",reply_markup=kb.k1)



@dp.message_handler(commands=['rsl'])
async def cmd_rsl(message: types.Message):
    user = message.from_user
    args = message.get_args()
    data = await get_rang(message)
    if data[1] == 1:
        if not args:
            await message.reply("–£–∫–∞–∂–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.")
        else:
            chats = cursor.execute("SELECT user_id FROM users").fetchall()
            otp = 0
            notp=0
            for x in chats:
                try:
                    chat = await bot.get_chat(str(x[0]))
                    await bot.send_message(chat.id, args)
                    otp = otp + 1
                except:
                    notp=notp+1
            await message.reply(f"–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–∞!\n\n–¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:\n{args}\n\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ {otp} —é–∑–µ—Ä–∞–º\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {notp} —é–∑–µ—Ä–∞–º")

@dp.message_handler(commands=['botinfo'])
@dp.throttled(rate=5)
async def cmd_botinfo(message: types.Message):
    user = message.from_user
    users = await get_len_users(message)
    await message.reply(f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞:</b>\n\n"
                            f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>{users}</code>\n")

